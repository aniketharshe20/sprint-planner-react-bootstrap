{"version":3,"sources":["fontawesome.js","components/Sidebar.js","components/UserStoryDetails.js","components/List.js","components/Tasks.js","components/Panel.js","components/Table.js","components/Summary.js","components/Page.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faTrashAlt","Sidebar","elements","this","props","items","map","item","key","id","href","onClick","showDetails","className","title","Component","UserstoryDetails","selectedUSObj","usDetails","number","description","List","index","removeTask","icon","Tasks","setEstimateValue","estimateVal","usId","estimate","setNotesValue","notesVal","addTask","event","which","updateTasks","tasks","type","name","onChange","updateEstimate","value","onKeyPress","Panel","details","selectedUS","UserStoryDetails","Table","renderHeader","headers","tableData","scope","renderBody","rows","row","data","Array","isArray","j","tableCls","Summary","Object","keys","forEach","estimatedHrs","push","stories","require","Page","currentUS","setState","showSummary","initEstimate","userEstimate","state","notes","target","bodyComponent","class","App","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0d3c395a.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\nlibrary.add(faTrashAlt);","import React, { Component } from 'react';\n\nclass Sidebar extends Component {\n\n    render() {\n        const items = this.props.items;\n        const elements = items.map((item) =>\n            <a key={item.id} href=\"#\" onClick={() => this.props.showDetails(item.id)} className=\"list-group-item list-group-item-action bg-light\">{item.title}</a>\n        );\n        return (\n            <div className=\"list-group list-group-flush\">\n                {elements}\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;","import React, { Component } from 'react';\n\nclass UserstoryDetails extends Component {\n\n    render() {\n        const selectedUSObj = this.props.usDetails;\n        return (\n            <div>\n                <h5 className=\"font-weight-bold mt-4 color666\">{selectedUSObj.number}: {selectedUSObj.title}</h5>\n                <div className=\"mt-4 mb-3 text-secondary\">\n                    {selectedUSObj.description}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserstoryDetails;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass List extends Component {\n\n    render() {\n        let items = this.props.items;\n        let elements = items.map((item, index) =>\n            <li key={index}>{item} <a onClick={() => this.props.removeTask(index)}><FontAwesomeIcon icon={[\"far\", \"trash-alt\"]} /></a></li>\n        );\n        return (\n            <ul>\n                {elements}\n            </ul>\n        );\n    }\n}\n\nexport default List;","import React, { Component } from 'react';\nimport List from './List';\n\nclass Tasks extends Component {\n\n    // Sets the estimate value\n    setEstimateValue = () => {\n        let estimateVal = '';\n        let usId = this.props.usDetails.id;\n        if (typeof this.props.estimate[usId] != \"undefined\") {\n            estimateVal = this.props.estimate[usId]['estimatedHrs'];\n        }\n        return estimateVal;\n    }\n\n    // Sets the notes value\n    setNotesValue = () => {\n        let notesVal = '';\n        let usId = this.props.usDetails.id;\n        if (typeof this.props.estimate[usId] != \"undefined\") {\n            notesVal = this.props.estimate[usId]['notes'];\n        }\n        return notesVal;\n    }\n\n    // Adds the task\n    addTask = (event) => {\n        if (event.which === 13) {\n            this.props.updateTasks(event);\n        }\n    }\n\n    render() {\n        let usId = this.props.usDetails.id;\n        let tasks = [];\n        if (typeof this.props.estimate[usId] != \"undefined\") {\n            tasks = this.props.estimate[usId]['tasks'];\n        }\n\n        return (\n            <div className=\"border-top pt-4 row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"form-group col-md-8\">\n                        <label>Estimate:</label>\n                        <input type=\"number\" name=\"estimateHrs\" id=\"estimateHrs\" className=\"form-control\"\n                               onChange={event => this.props.updateEstimate(event, 'estimatedHrs')}\n                               value={this.setEstimateValue()}/>\n                    </div>\n                    <div className=\"form-group col-md-8\">\n                        <label>Notes:</label>\n                        <textarea name=\"notes\" id=\"notes\" className=\"form-control\" value={this.setNotesValue()}\n                                  onChange={event => this.props.updateEstimate(event, 'notes')} />\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"form-group col-md-8\">\n                        <label>Task breakup:</label>\n                        <input type=\"text\" name=\"task\" id=\"task\" className=\"form-control\" onKeyPress={this.addTask} />\n                    </div>\n                    <div className=\"form-group col-md-8\">\n                        <List items={tasks} removeTask={this.props.removeTask}/>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Tasks;","import React, { Component } from 'react';\nimport UserStoryDetails from './UserStoryDetails';\nimport Tasks from './Tasks';\n\nclass Panel extends Component {\n\n    render() {\n        let details, tasks;\n        if (this.props.selectedUS != null) {\n            details = <UserStoryDetails usDetails={this.props.selectedUS} />;\n            tasks = <Tasks estimate={this.props.estimate} updateTasks={this.props.updateTasks}\n                           updateEstimate={this.props.updateEstimate} usDetails={this.props.selectedUS}\n                           removeTask={this.props.removeTask}/>\n        }\n        return (\n            <div className=\"panel\">\n                <div className=\"details-section\">\n                    {details}\n                </div>\n                <div className=\"task-section\">\n                    {tasks}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Panel;","import React, { Component } from 'react';\n\nclass Table extends Component {\n\n    // Renders the table header\n    renderHeader = () => {\n        let headers = this.props.tableData.headers;\n        return <tr>{headers.map((title, key) => <th key={key} scope=\"col\">{title}</th>)}</tr>;\n    }\n\n    // Renders the table body\n    renderBody = () => {\n        let rows = this.props.tableData.rows;\n        return rows.map((row, index) => {\n            let elements = row.map((data, key) => {\n                let td = '';\n                if (Array.isArray(data)) {\n                    td = <td key={key} scope=\"row\"><ol>{data.map((item, j) => <li key={j}>{item}</li>)}</ol></td>;\n                } else {\n                    td = <td key={key} scope=\"row\">{data}</td>\n                }\n                return td;\n            });\n            return <tr key={index}>{elements}</tr>\n        });\n    }\n\n    render() {\n        let tableCls = 'table responsive ';\n        if (typeof this.props.tableCls != \"undefined\") {\n            tableCls += this.props.tableCls;\n        }\n        return (\n            <table className={tableCls}>\n                <thead>\n                    {this.renderHeader()}\n                </thead>\n                <tbody>\n                    {this.renderBody()}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default Table;","import React, { Component } from 'react';\nimport Table from './Table';\n\nclass Summary extends Component {\n\n    render() {\n        let estimate = this.props.estimate;\n        let rows = [];\n\n        Object.keys(estimate).forEach(key => {\n            let row = [estimate[key].number, estimate[key].estimatedHrs, estimate[key].tasks];\n            rows.push(row);\n        });\n\n        let tableData = {\n            'headers': ['US Number', 'Estimate', 'Tasks'],\n            'rows': rows\n        }\n        return (\n            <div>\n                <h5 className=\"font-weight-bold mt-4 color666\">Estimate summary</h5>\n                <div className=\"mt-4\">\n                    <Table tableData={tableData} tableCls=\"table-bordered table-striped\"></Table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Summary;","import React, { Component } from 'react';\nimport '../css/simple-sidebar.css';\nimport Sidebar from \"./Sidebar\";\nimport Panel from \"./Panel\";\nimport Summary from './Summary';\n\nlet data = require(\"../userstories.json\");\nlet stories = data['data'];\n\nclass Page extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedUS: null,\n            estimate: {},\n            showSummary: 0\n        }\n    }\n\n    // Shows the details of selected user story\n    showDetails = (id) => {\n        let currentUS = null;\n\n        stories.forEach(item => {\n            if (item.id == id) {\n                currentUS = item;\n            }\n        });\n        this.setState({ selectedUS: currentUS, showSummary: 0 });\n    }\n\n    // Returns the initial estimate array\n    initEstimate = () => {\n        let userEstimate = this.state.estimate;\n        if (typeof userEstimate[this.state.selectedUS.id] === \"undefined\") {\n            let estimate = {\n                number: this.state.selectedUS.number,\n                estimatedHrs: '',\n                notes: '',\n                tasks: []\n            };\n            userEstimate[this.state.selectedUS.id] = estimate;\n        }\n        return userEstimate;\n    }\n\n    // Adds the tasks for the user story\n    updateTasks = (event) => {\n        let userEstimate = this.initEstimate();\n        userEstimate[this.state.selectedUS.id]['tasks'].push(event.target.value);\n        this.setState({ estimate: userEstimate });\n        event.target.value = '';\n    }\n\n    // Adds the estimate fpr user story\n    updateEstimate = (event, key) => {\n        let userEstimate = this.initEstimate();\n        if (key == 'estimatedHrs') {\n            userEstimate[this.state.selectedUS.id]['estimatedHrs'] = event.target.value;\n        } else if (key == 'notes') {\n            userEstimate[this.state.selectedUS.id]['notes'] = event.target.value;\n        }\n        this.setState({ estimate: userEstimate });\n    }\n\n    // Removes selected task\n    removeTask = (id) => {\n        let userEstimate = this.state.estimate;\n        delete userEstimate[this.state.selectedUS.id]['tasks'][id];\n        this.setState({ estimate: userEstimate });\n    }\n\n    // Shows the total summary of all user stories estimated\n    showSummary = () => {\n        this.setState({ showSummary: 1 });\n    }\n\n    render() {\n        let bodyComponent = <Panel selectedUS={this.state.selectedUS} estimate={this.state.estimate}\n                                   updateTasks={this.updateTasks} updateEstimate={this.updateEstimate}\n                                   removeTask={this.removeTask} />;\n        if (this.state.showSummary == 1) {\n            bodyComponent = <Summary estimate={this.state.estimate}></Summary>;\n        }\n        return (\n            <div id=\"wrapper\" className=\"d-flex\">\n                <div id=\"sidebar-wrapper\" className=\"bg-light border-right\">\n                    <div className=\"sidebar-heading\">User stories </div>\n                    <Sidebar items={stories} showDetails={this.showDetails}></Sidebar>\n                </div>\n                <div id=\"page-content-wrapper\">\n                    <div className=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\n                        <ul class=\"navbar-nav mt-2 mt-lg-0\">\n                        <li className=\"nav-item\">\n                            <a href=\"#\" className=\"nav-link\" onClick={() => this.showSummary()}>Summary</a>\n                        </li>\n                        </ul>\n                    </div>\n                    <div className=\"container-fluid\">\n                        {bodyComponent}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Page;","import React from 'react';\nimport './App.css';\nimport './css/bootstrap.min.css';\nimport './fontawesome';\nimport Page from \"./components/Page\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Page />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}